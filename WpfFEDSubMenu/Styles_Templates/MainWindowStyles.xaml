<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--// Toggle Button Style Template //-->

    <ImageBrush x:Key="tb_mouse_over"
                ImageSource= "../Assets/tgBtn_MouseOver.png"/>

    <!--// Text font style //-->

    <Style x:Key="font_style" TargetType="TextBlock">

        <Setter Property="FontFamily"
                    Value="../Fonts/Roboto-Light.ttf #Roboto"/>

        <Setter Property="VerticalAlignment"
                    Value="Center"/>

        <Setter Property="HorizontalAlignment"
                    Value="Left"/>

        <Setter Property="Foreground"
                    Value="White"/>

        <Setter Property="FontSize"
                    Value="20"/>

    </Style>

    <!--// Tooltip Style Template //-->

    <Style TargetType="ToolTip" x:Key="tt_style">

        <Setter Property="Placement" Value="Right"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Background" Value="#4A5668"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="../Fonts/Roboto-Light.ttf #Roboto"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="PlacementRectangle" Value="147,0,0,0"/>
        <Setter Property="HorizontalOffset" Value="15"/>
        <Setter Property="VerticalOffset" Value="0"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>


    </Style>

    <Style x:Key="tb_style" TargetType="{x:Type ToggleButton}">

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Border  x:Name="border"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}"
                                 SnapsToDevicePixels="True">

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">

                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">

                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>


    <!--// App Control Buttons Style Template //-->

    <ImageBrush x:Key="CloseBtn_MouseOver" ImageSource="../Assets/closeBtn_mo_40.png"/>
    <ImageBrush x:Key="MaxBtn_MouseOver" ImageSource="../Assets/maxBtn_mo_40.png"/>
    <ImageBrush x:Key="MinBtn_MouseOver" ImageSource="../Assets/minBtn_mo_40.png"/>

    <Style x:Key="Control_btn" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="button"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                Height="25"
                                Width="25"
                                Cursor="Hand">

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                     Value="True">

                            <Setter Property="Background"
                                        TargetName="button"
                                        Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!--<Style x:Key="Max_btn" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="button2"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                Height="30"
                                Width="30">

                    </Border>

                    <ControlTemplate.Triggers>
                        --><!--Button Style on hover--><!--
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="button2" Value="{StaticResource MaxBtn_MouseOver}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--// Listview items style template //--><!--

    <Style x:Key="ItemContainerStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>
            --><!--ItemList Style on hover--><!--
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource panelOverColor}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="BorderThickness" Value="2,0,0,0"/>
            </Trigger>
            --><!--Selected ItemList style--><!--
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="BorderThickness" Value="2,0,0,0"/>
            </Trigger>
        </Style.Triggers>

    </Style>-->

    <!--// Menu Item Template //-->

    <ControlTemplate x:Key="Item_Template"
                     TargetType="{x:Type MenuItem}">

        <Border x:Name="border"
                Background="#2E333A"
                BorderBrush="#2E333A"
                BorderThickness="{TemplateBinding BorderThickness}"
                Height="50"
                Width="230"
               >

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22"
                                      Width="Auto" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>

                <!--// Icon //-->

                <ContentPresenter x:Name="Icon"
                                  ContentSource="Icon"
                                  HorizontalAlignment="Center"
                                  Height="35"
                                  Width="35"
                                  Margin="10,0,0,0"
                                  VerticalAlignment="Center" />

                <!--// Menu Text //-->

                <ContentPresenter ContentSource="Header"
                                  Grid.Column="2"
                                  TextBlock.Foreground="White"
                                  TextBlock.FontFamily="../Fonts/#Roboto Light"
                                  TextBlock.FontSize="20"
                                  HorizontalAlignment="Left"
                                  RecognizesAccessKey="True"
                                  Margin="3,0,0,0"
                                  VerticalAlignment="Center" />


            </Grid>
        </Border>


        <ControlTemplate.Triggers>

            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Visible" />
            </Trigger>

            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Visible" />
            </Trigger>

            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#404D5B" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#404D5B" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>